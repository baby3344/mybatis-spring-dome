<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url">
            <value><![CDATA[jdbc:mysql://127.0.0.1:3306/smbms?
            useUnicode=true&characterEncoding=utf-8]]></value>
        </property>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>-->

    <!--配置DataSource-->
    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--配置SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引用数据源组件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 引用MyBatis配置文件中的配置 -->
        <property name="configLocation" value="classpath:MyBatis-config.xml" />
        <!-- 配置SQL映射文件信息 -->
       <property name="mapperLocations">
        <list>
        <value>classpath:cn/qwx/dao/**/*.xml</value>
       </list>
        </property>
    </bean>

    <!--使用MapperFactoryBean查询供应商信息-->
    <!--<bean id="providerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.qwx.dao.provider.ProviderMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <!--使用SqlSessionDaoSupport实现供应商表查询-->
   <!-- <bean id="providerMapper" class="cn.qwx.dao.provider.ProviderMapperImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <!--采用MapperFactoryBean注册映射器实现查询订单表-->
    <!--<bean id="billMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.qwx.dao.bill.BillMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->


    <!--使用MapperScannerConfigurer注入实现查询订单表-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.qwx.dao"/>
    </bean>
    <context:component-scan base-package="cn.qwx.service"/>


    <bean id="providerService" class="cn.qwx.service.provider.ProviderServiceImpl">
        <property name="providerMapper" ref="providerMapper"/>
    </bean>

    <bean id="billService" class="cn.qwx.service.Bill.BillServiceImpl">
        <property name="billMapper" ref="billMapper"/>
    </bean>


    <!--示例10配置DAO-->
   <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.qwx.dao.user.UserMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <!--示例11-->
   <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.qwx.dao"/>
    </bean>-->

    <!--配置扫描注解定义的业务Bean-->
  <!-- <context:component-scan base-package="cn.qwx.service"/>-->


    <!--配置业务Bean并注入DAO实例-->
    <bean id="userService" class="cn.qwx.service.UserServiceImpl">
        <property name="userMapper" ref="userMapper"/>
    </bean>


    <!--定义事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--示例20-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--通过<tx:advice>标签为指定的事务管理器设置事务-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!--定义切入点-->
        <aop:pointcut id="serviceMethod" expression="execution(* cn.qwx.service..*.*(..))"/>
        <!--将事务增强与切入点组合-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
    </aop:config>


    <!--ch08示例1 引入properties文件-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:database.properties</value>
        </property>
    </bean>

     <!--配置DAO根据名称自动装配-->
    <!--<bean id="userMapper" class="cn.qwx.dao.user.UserMapperImpl" autowire="byName"/>
    <bean id="userService" class="cn.qwx.service.UserServiceImpl" autowire="byName"/>-->
</beans>